import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import Script from "next/script";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <Script
        id="cookiebot-banner"
        src="https://consent.cookiebot.com/uc.js"
        data-cbid="217a9fe1-4c5a-47bc-b6cd-7e498392da7f"
        data-blockingmode="auto"
        type="text/javascript"
        strategy="beforeInteractive"
      />
      <Script id="cookiebot-init" strategy="afterInteractive">
        {`
          function loadScriptsBasedOnConsent() {
            console.log("Cookiebot loaded");
            console.log({ Cookiebot: Cookiebot });

            if (Cookiebot && Cookiebot.consents) {
              if (Cookiebot.consents.statistics) {
                // Load Google Analytics
                console.log("Loading Google Analytics");
                console.log({ Cookiebot: Cookiebot.consents });
              } else {
                console.log("Statistics consent not given");
              }
            } else {
              console.log("Cookiebot or consents not available");
            }
          }

          // Call the function immediately if Cookiebot is already loaded
          if (typeof Cookiebot !== "undefined") {
            loadScriptsBasedOnConsent();
          }

          // Listen for the CookieConsent event
          window.addEventListener('CookieConsent', loadScriptsBasedOnConsent);
        `}
      </Script>

      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {children}
      </body>
    </html>
  );
}
